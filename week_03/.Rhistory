top_weights
top_weights["Charlie"]
top_weights["e"]
top_weights <- Dict$new(
"Charlie" = 0L,
.class = "integer",
.overwrite = TRUE
)
top_weights["Charlie"]
top_weights <- Dict$new(
"Charlie" = 0L,
.class = "integer",
.overwrite = TRUE
)
top_weights["Charlie"] <- top_weights["Charlie"]+1
top_weights["Charlie"]
as.numeric(top_weights["Charlie"])
as.numeric(top_weights["Charlie"])+1
row_i <- weights[i,-1]
View(row_i)
top_n(row_i, 10)
x <- top_n(row_i, 10)
View(x)
?top_n
t(row_i)
t(top_n(row_i, 10))
x<-t(top_n(row_i, 10))
order(t(row_i))
x <- order(t(row_i))
x <- arrange(t(row_i))
x <- sort(t(row_i))
sort(t(row_i))
t(row_i)
sort(t(row_i))
t(row_i)
top_n(t(row_i), 10)
df <- data.frame(x = c(6, 4, 1, 10, 3, 1, 1))
df
t(row_i)
top_n(t(row_i)[,1], 10)
x <- t(row_i)
x <- as.data.frame(t(row_i))
View(x)
top_n(x, 10)
sort(x)
sort(x$V1)
x <- sort(x$V1)
View(weights)
top_weights <- Dict$new(
"Tires" = 0L,
.class = "integer",
.overwrite = TRUE
)
top_weights
"Tires" %in% top_weights
top_weights["Yes"] <- as.numeric(top_weights["Yes"]) + 1
as.numeric(top_weights["Yes"])
weights %>%
rowwise() %>%
print(max(weights[,-1]))
weights %>%
rowwise() %>%
max(weights[,-1])
weights[1]
weights[,-1]
max(weights[,-1])
x <- weights %>%
rowwise() %>%
max(weights[2,-1])
max(weights[2,-1])
weights[,-1] %>%
rowwise() %>%
max(weights)
weights[,-1] %>%
rowwise() %>%
max()
pmax(weights)
pmax(weights[2,-1])
x <- pmax(weights[2,-1])
View(x)
View(weights)
x <- pmax(weights[,-1])
View(x)
weights[,-1] %>%
rowwise() %>%
top_n(10)
x <- weights[,-1] %>%
rowwise() %>%
top_n(10)
View(x)
as.numeric(top_weights[x])+1
x <- weights[,-1] %>%
rowwise() %>%
arrange(desc(Score)) %>%
slice(1:10)
weights[,-1] %>%
rowwise() %>%
arrange(desc()) %>%
slice(1:10)
View(row_i)
df <- as.data.frame(t(weights[-1,]))
View(df)
colnames(df)<- df[1,]
max(df$`1997-02-01`)
View(weights)
weights2 <- weights[weights$Date>="2022-10-01",]
weights2 <- weights[weights$Date>="2012-10-01",]
View(weights2)
weights2 <- weights[weights$Date>="2012-08-01",]
View(weights2)
weights2 <- weights[weights$Date>="2012-07-01",]
View(weights2)
weights <- read_csv("weights.csv")
weights <- weights[weights$Date>="2012-07-01",]
weights <- as.data.frame(t(weights[-1,]))
colnames(weights)<- weights[1,]
View(weights)
weights <- weights[-1,]
View(weights)
max(weights$`2012-09-01`)
max(weights$`2012-10-01`)
View(weights)
weights <- read_csv("weights.csv")
View(weights)
weights <- weights[weights$Date>="2012-07-01",]
View(weights)
max(weights[1,-1])
weights$Largest_Column<-colnames(weights)[apply(weights,1,which.max)]
summary(as.factor(weights$Largest_Column))
weights <- as.data.frame(t(weights[-1,]))
colnames(weights)<- weights[1,]
weights <- weights[-1,]
View(weights)
weights <- read_csv("weights.csv")
weights <- weights[weights$Date>="2012-07-01",]
View(weights)
row_i <- weights[i,-1]
View(row_i)
n <- t(row_i)
n <- as.data.frame(t(row_i))
View(n)
n <- sort(as.data.frame(t(row_i)))
View(n)
x <- top_n(n$V1, 10)
View(n)
arrange(n)
x <- arrange(n)
View(x)
x <- arrange(n, desc())
x <- arrange(n, desc())
x <- arrange(n, desc)
x <- arrange(n$V1, desc)
x <- arrange(n$V1, desc())
x <- arrange(n)
View(x)
x <- order(n)
View(n)
x <- order(n)
n <- sort(as.data.frame(t(row_i)), decreasing = TRUE)
n <- sort(as.data.frame(t(row_i)))
n <- as.data.frame(t(row_i))
n <- sort(n$V1, decreasing = TRUE)
n <- sort(n, decreasing = TRUE)
n <- as.data.frame(t(row_i))
n <- sort(n, decreasing = TRUE)
n <- sort(n, decreasing = TRUE)
n <- as.data.frame(t(row_i))
n <- sort(n, decreasing = TRUE)
v <- top_n(x, 10)
x <- x[1:10]
x <- sort(n$V1, decreasing = TRUE)
View(x)
x$Value
x
typeof(x)
x[1:10]
x[1]
top_weights$has("Wes")
top_weights$has("Wes)
top_weights$has(Wes)
top_weights$has("Wes")
z <- "Wes"
top_weights$has(z)
z <- "Tires"
top_weights$has(z)
k
k <- "Tires"
ifelse(top_weights$has(k),top_weights[k] <- as.numeric(top_weights[x])+1,top_weights[k] <- 1L)
top_weights[k]
as.numeric(top_weights[x])
as.numeric(top_weights[x])+1
top_weights[x]
as.numeric(top_weights[k])
as.numeric(top_weights[k])+1
ifelse(top_weights$has(k), top_weights[k] <- as.numeric(top_weights[k])+1, top_weights[k] <- 1L)
top_weights[k]
top_weights$has(k)
# ifelse(top_weights$has(k), top_weights[k] <- as.numeric(top_weights[k])+1, top_weights[k] <- 1L)
if (top_weights$has(k)) {
top_weights[k] <- as.numeric(top_weights[k])+1
} else {
top_weights[k] <- 1L
}
top_weights[k]
### Most Common Top Weights ###
top_weights <- Dict$new(
"Tires" = 0L,
.class = "integer",
.overwrite = TRUE
)
top_weights
top_weights$has(k)
as.numeric(top_weights[k])
as.numeric(top_weights[k])+1
# ifelse(top_weights$has(k), top_weights[k] <- as.numeric(top_weights[k])+1, top_weights[k] <- 1L)
if (top_weights$has(k)) {
top_weights[k] <- as.numeric(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
# ifelse(top_weights$has(k), top_weights[k] <- as.numeric(top_weights[k])+1, top_weights[k] <- 1L)
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
top_weights[k]
k<-"Wes"
# ifelse(top_weights$has(k), top_weights[k] <- as.numeric(top_weights[k])+1, top_weights[k] <- 1L)
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
top_weights[k]
top_weights
ifelse(top_weights$has(k), top_weights[k] <- as.integer(top_weights[k])+1, top_weights[k] <- 1L)
ifelse(top_weights$has(k), top_weights[k] <- as.integer(top_weights[k])+1L, top_weights[k] <- 1L)
top_weights
ifelse(top_weights$has(k), top_weights[k] <- as.integer(top_weights[k])+1L, top_weights[k] <- 1L)
top_weights
x <- x[1:10]
x
for (m in x) {
x
}
for (m in x) {
print(x)
}
for (m in x) {
print(m)
}
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)
x <- x[1:10]
for (m in x) {
print(m)
}
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
x
colnames(weights)[which(weights==m)]
k <- colnames(weights)[apply(weights,1,which(weights==m))]
colnames(row_i)
names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
names(row_i)[which(row_i == 1, arr.ind=T)[, "col"]]
row_i
m
names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
m <- x[1]
m
names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
top_weights$has(k)
k
top_weights <- Dict$new(
"Tires" = 0L,
.class = "integer",
.overwrite = TRUE
)
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
top_weights
top_weights["Tires"]
as.data.frame(top_weights)
for (i in 2:10) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
top_weights
for (i in 2:100) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
top_weights
print(top_weights)
print(top_weights$values)
top_weights <- Dict$new(
"Tires" = 0L,
.class = "integer",
.overwrite = TRUE
)
top_weights$values
for (i in 2:10) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
top_values[1]
top_values$values[1]
top_weights[1]
top_weights.values[1]
top_weights.values
top_weights$values[1]
top_weights$keys[1]
rm(weights2)
for (i in 2:nrow(weights)) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
### Most Common Top Weights ###
top_weights <- Dict$new(
"Tires" = 0L,
.class = "integer",
.overwrite = TRUE
)
for (i in 2:nrow(weights)) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
top_weights
length(top_weights$keys)
sum(top_weights$keys)
sum(top_weights$values)
length(top_weights$values)
top_weights$values
prices <- read_csv("prices.csv")
prices <- prices[prices$Date>="2012-07-01",]
View(prices)
for (i in 1:nrow(weights)) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
### Most Common Top Price Changes ###
top_prices <- Dict$new(
"Tires" = 0L,
.class = "integer",
.overwrite = TRUE
)
for (i in 1:nrow(prices)) {
row_i <- prices[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_prices$has(k)) {
top_prices[k] <- as.integer(top_prices[k])+1L
} else {
top_prices[k] <- 1L
}
}
}
View(row_i)
(175-100)/100
(200-100)/100
(0.0001-100)/100
top_weights$keys
top_weights <- Dict$new(
"Owner-occupied stationary homes" = 0L,
.class = "integer",
.overwrite = TRUE
)
for (i in 1:nrow(weights)) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
top_weights
sort(top_weights$values)
top_weights$sort()
top_weights$sort(values)
?Dict
top_weights$values
top_weights <- Dict$new(
"Owner-occupied stationary homes" = 0L,
.class = "integer",
.overwrite = TRUE
)
for (i in 1:nrow(weights)) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
top_weights$keys
top_weights$items
top_weights <- Dict$new(
"Owner-occupied stationary homes" = 0L,
.class = "integer",
.overwrite = TRUE
)
for (i in 1:nrow(weights)) {
row_i <- weights[i,-1]
x <- sort(as.data.frame(t(row_i))$V1, decreasing = TRUE)[1:10]
for (m in x) {
k <- names(row_i)[which(row_i == m, arr.ind=T)[, "col"]]
if (top_weights$has(k)) {
top_weights[k] <- as.integer(top_weights[k])+1L
} else {
top_weights[k] <- 1L
}
}
}
##### Average weight for each good in the past 10 years
avg_weights <- weights[,-1] %>%
summarise(mean = mean())
##### Average weight for each good in the past 10 years
avg_weights <- weights[,-1] %>%
summarise(mean = mean(.))
View(weights)
##### Average weight for each good in the past 10 years
avg_weights <- weights[,-1] %>%
summarise(mean = mean(., na.rm = TRUE))
View(avg_weights)
avg_weights <- weights[,-1] %>%
summarise_all(funs(sum))
View(avg_weights)
##### Average weight for each good in the past 10 years
avg_weights <- weights[,-1] %>%
summarise_all(funs(mean))
View(avg_weights)
x <- sort(as.data.frame(t(avg_weights))$V1, decreasing = TRUE)[1:10]
as.data.frame(t(avg_weights))
k <- names(row_i)[which(row_i %in% x, arr.ind=T)[, "col"]]
k <- names(avg_weights)[which(avg_weights %in% x, arr.ind=T)[, "col"]]
avg_weights %in% x
which(avg_weights %in% x
k <- names(avg_weights)[which(avg_weights %in% x]
k <- avg_weights[which(avg_weights %in% x]
avg_weights[which(avg_weights %in% x]
avg_weights[which(avg_weights %in% x)]
k <- avg_weights[which(avg_weights %in% x)]
View(k)
avg_weights10 <- avg_weights[which(avg_weights %in% sort(as.data.frame(t(avg_weights))$V1, decreasing = TRUE)[1:10])]
View(avg_weights10)
avg_weights10 <- avg_weights[which(avg_weights %in% sort(as.data.frame(t(avg_weights))$V1,
decreasing = TRUE)[1:10])]
prices <- prices[prices$Date>="2011-07-01",]
